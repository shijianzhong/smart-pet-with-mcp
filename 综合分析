/*
 * 当前架构分析
 */
// 当前系统使用单例MCPClient模式，在主进程中创建一个全局的globalMCPClient
// 对话功能与MCP Client高度耦合，每次只能连接一个MCP服务器
// 数据库中存储了多个MCP服务器的配置，但运行时只能选择一个
// 工具调用通过单一MCP Client实例进行

/*
 * 架构问题分析
 */
// 对话系统和MCP Client耦合度高，难以同时使用多个服务器的工具
// 没有统一的工具注册和管理机制
// 缺乏动态挂载和管理多个MCP服务器的能力
// 工具调用流程不够灵活，难以支持多服务器工具组合调用 